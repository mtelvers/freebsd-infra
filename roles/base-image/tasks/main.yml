---

- set_fact:
    base_image: "freebsd-ocaml-{{ version.split('.')[:2] | join('.') }}"
  when: version != "busybox"

- set_fact:
    base_image: "busybox"
  when: version == "busybox"

- name: Check for existing base image {{ zfs_pool }}/base-image/{{ base_image }}
  shell: zfs list -H -o name {{ zfs_pool }}/base-image/{{ base_image }}
  register: zfs_check
  failed_when: zfs_check.rc > 1

- name: Delete existing base image {{ zfs_pool }}/base-image/{{ base_image }}
  shell: zfs destroy -R -r {{ zfs_pool }}/base-image/{{ base_image }}
  when: zfs_check.rc == 0

- name: Check for user {{ user_name }}
  shell: getent passwd {{ user_name }}
  register: user_check
  failed_when: user_check.rc == 1

- name: Delete user and home directory of {{ user_name }} if it exists
  shell: |
    pw userdel {{ user_name }} -r
  when: user_check.rc == 0

- name: Create user {{ user_name }}
  shell: |
    pw groupadd opam -g 1000
    pw useradd -m -n opam -g opam -u 1000 -h - -c {{ user_name }}

- name: Create sudo file for {{ user_name }}
  copy:
    dest: "/usr/local/etc/sudoers.d/{{ user_name }}"
    content: |
      {{ user_name }} ALL=(ALL:ALL) NOPASSWD: ALL

- name: Create setup script
  copy:
    dest: /usr/home/{{ user_name }}/freebsd-ocaml.sh
    mode: u+rwx,g+rx,o+rx
    owner: "{{ user_name }}"
    content: |
      git clone -b 2.1 https://github.com/ocaml/opam opam
      cd opam && gmake CONFIGURE_ARGS=--with-0install-solver cold && sudo cp -p opam /usr/local/bin/opam-2.1 && cd ../ && rm -rf opam
      sudo ln /usr/local/bin/opam-2.1 /usr/local/bin/opam
      git clone https://github.com/ocaml/opam-repository.git
      opam init -k git -a ./opam-repository -c {{ version }} -y
  when: version != "busybox"

- name: Run freebsd-ocaml.sh script as user {{ user_name }} for {{ version }}
  shell: su - {{ user_name }} -c ./freebsd-ocaml.sh
  args:
    chdir: "/usr/home/{{ user_name }}"
    creates: "/usr/home/{{ user_name }}/opam-repository"
  when: version != "busybox"

- name: Check for existing snapshot zroot/root@snap
  shell: zfs list -H -o name zroot/root@snap
  register: zfs_check
  failed_when: zfs_check.rc > 1

- name: Delete existing snapshot zroot/root@snap
  shell: zfs destroy zroot/root@snap
  when: zfs_check.rc == 0

- name: Snapshot the root filesystem
  shell: zfs snapshot zroot/root@snap

- name: Create target for base image {{ zfs_pool }}/base-image/{{ base_image }}
  shell: zfs create -p {{ zfs_pool }}/base-image/{{ base_image }}

- name: Copy ZFS volume zroot/root@snap to {{ zfs_pool }}/base-image/{{ base_image }}
  shell: zfs send zroot/root@snap | zfs receive -d {{ zfs_pool }}/base-image/{{ base_image }}

- name: Delete snapshot zroot/root@snap
  shell: zfs destroy zroot/root@snap

- name: Delete copy of the snapshot
  shell: zfs destroy {{ zfs_pool }}/base-image/{{ base_image }}/root@snap

- name: Rename to rootfs
  shell: zfs rename {{ zfs_pool }}/base-image/{{ base_image }}/root {{ zfs_pool }}/base-image/{{ base_image }}/rootfs

- name: Clean up image
  shell: |
    rm -fR `ls -d usr/home/* | grep -v opam`
    rm -fR rescue boot usr/share/games
    rm usr/bin/fortune usr/lib/lib*_p.a
    find usr/share/man -type f -delete
    chmod 1777 tmp
  args:
    chdir: "/{{ zfs_pool }}/base-image/{{ base_image }}/rootfs"

- name: Create a snapshot of the base image
  shell: zfs snapshot -r {{ zfs_pool }}/base-image/{{ base_image }}@snap

- name: Delete user {{ user_name }}
  shell: pw userdel {{ user_name }} -r

